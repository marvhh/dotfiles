# system maint
alias fucking="sudo "
alias apt="sudo apt"
alias update=update_system
alias update-firmwares=update_firmwares

# shell stuff
alias c="clear"
alias r="reset"
alias hg="history |grep"
alias rgrep="grep -r"

# crypto
alias sha1="openssl sha1"

# etc
alias ap="ansible-playbook"
alias backup="sudo borgmatic --verbosity 1 --progress --stats"

# kubectl
alias k="kubectl"
complete -F __start_kubectl k
alias kn=kubectlns

#
# functions
#

# Trigger package upgrade for different Distributions.
update_system () {
    DISTRO_ID=$(cat /etc/os-release |grep "^ID=" |cut -d "=" -f2)
    if [ $DISTRO_ID == "arch" ]
    then
        sudo pacman -Syu
    elif [ $DISTRO_ID == "debian" ]
    then
        sudo apt update && sudo apt upgrade
    elif [ $DISTRO_ID == "fedora" ]
    then
        echo "Updating dnf packages:"
		sudo dnf upgrade
        echo "Updating flatpak packages:"
        flatpak update
    else
        echo "Distribution unkown."
    fi
}

# Trigger fwupdmgr to upgrade firmwares.
update_firmwares () {
    sudo fwupdmgr refresh --force
    sudo fwupdmgr upgrade
}

# change kubernetes namespace
kubectlns() {
	ctx=$(kubectl config current-context)
	ns=$1

  	# verify that the namespace exists
	ns=$(kubectl get namespace $1 --no-headers --output=go-template={{.metadata.name}} 2>/dev/null)
	if [ -z "${ns}" ]; then
		echo "Namespace (${1}) not found, using default"
		ns="default"
	fi

	kubectl config set-context ${ctx} --namespace="${ns}"
}
